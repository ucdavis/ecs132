
1.  geometric

2.  We need P(T <= 8.2361), which is P(T <= 8).  Write that as

   P(T <= 8 and I = 1 or T <= 8 and I = 0)
=  P(T <= 8 and I = 1) + P(T <= 8 and I = 0)
= 0.5 (0.1+0.2+0.3) + 0.5 (1) 

3.  Only (i). A geometric (or Poisson etc.) distribution violates (ii)
and (iii), and (iv) is just way wrong.

4.

sim <- function(nReqs,fullSeek,fullRot)
{
   currentTime <- 0
   currentTrackPos <- 0.5  # doesn't matter, in long-run
   for (i in 1:nReqs) {
      newTrackPos <- runif(1)
      seekTime <- fullSeek * abs(newTrackPos - currentTrackPos)
      currentTime <- currentTime + seekTime
      rotDelay <- runif(1,0,fullRot)
      currentTime <- currentTime + rotDelay
      currentTrackPos <- newTrackPos
   }

   currentTime / nReqs
}

print(sim(25000,0.2,0.1))  # approx. 0.1167

