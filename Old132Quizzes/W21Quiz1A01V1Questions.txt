
DESCRIPTION

Please keep in mind the OMSI rules.

Save your files often.

Submit each answer individually and make sure you receive the notification of successful submission.

Don't wait till the last moment to submit all answers, as there might be network traffic in the last 5 minutes causing unexpected delay and failure.  

Remember that clicking CopyQtoA will copy the entire question box to the answer box.

In questions involving code which will PARTIALLY be given to you in the question specs, you may need to add new lines. 
There may not be information given as to where the lines should be inserted. 

MAKE SURE TO RUN THE R CODE ANSWER IN PROBLEMS THAT INVOLVE R CODE!

QUESTION

(text answer - 20 pts) For two events A and B, if we write P(A or B) = P(A) + P(B), what assumption are we making?

QUESTION

(text answer - 20 pts) In what topic covered by the course so far does the
notion of a symmetric matrix arise?

QUESTION

(text answer - 20 pts) In Problem 2 of Homework 1, we have the relation

p_{d,k} = (1/s) ( p_{d-1,k-1} + p_{d-2,k-1} + ... + p_{d-s,k-1} )

State the equation numbers of the "mailing tubes" that are used to
support this equation.

QUESTION -ext .R -run 'Rscript ./omsi_answer4.R'

(R code answer - 20 pts) In the bus ridership problem, Sec 2.11 (page 20), say we are given that the bus had only 1 passenger when it was leaving stop 5. 
Then what is the probability that the bus will leave stop 6 with only 1 passenger inside?

QUESTION -ext .R -run 'Rscript ./omsi_answer5.R'

(R code answer - 20 pts) Consider the bus problem, Sec. 2.11.  Modify the
simulation code on p.30 to find the probability that exactly 3
passengers alight in the first 8 stops.  The original code is this:

nreps <- 10000; nstops <- 10; count <- 0
for (i in 1:nreps) {
   passengers <- 0
   for (j in 1:nstops) {
      if (passengers > 0) 
         for (k in 1:passengers) 
            if (runif(1) < 0.2) 
               passengers <- passengers - 1
      newpass <- sample(0:2,1,prob=c(0.5,0.4,0.1))
      passengers <- passengers + newpass
   }
   if (passengers == 0) count <- count + 1
}
print(count/nreps)
